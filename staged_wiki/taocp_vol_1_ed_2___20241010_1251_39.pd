%title taocp_vol_1_ed_2
%date 2024-10-10 12:51
%%visits: 23

#  taocp_vol_1_ed_2
[[taocp_note_on_exercises___20241010_125406|taocp_note_on_exercises]]
[[the_euclidean_algorithm___11_06_2022__090230167|the_euclidean_algorithm___11_06_2022__090230167]]
[[taocp_vol_1_ed_2_exercises___20241010_130500|taocp_vol_1_ed_2_exercises]]

"""
If we wish to restrict the notiation of algorithm so that only elementary operations are involved, we can place restrictions on $Q, I, \Omega$ and $f$, for example as follows:
Let $A$ be a finite set of letters, and let $A^{*}$ be the set of all strings on $A$
(i.e., the set of all ordered sequences $x_1x_2\ldots x_n$, where $n \ge 0$ and $x_j$ is in $A$ for $1 \le j \le n$).
The idea is to encode the states of the computation so that they are represented by strings of $A^{*}$.
Now let $N$ be a nonnegative integer and let $Q$ be the set of all $\left( \sigma, j \right) $, where $\sigma$ is in $A^{*}$ and $j$ is an integer, $0\le j \le N$;
Let $I$ be the subset of $Q$ with $j=0$ and let $\Omega$ be the subset with $j = N$.
If $\theta$ and $\sigma$ are strings in $A^{*}$, we say that $\theta$ occurs in $\sigma$ if $\sigma$ has the form $\alpha \theta \omega$ for strings $\alpha$ and $\omega$.
To complete our definition, let $f$ be a function of the following type, defined by the strings $\theta_j,\phi_j$ and the integers $a_j$, $b_j$ for $0 \le j \le N$:

$f(\sigma,j) = \left( \sigma,a_j \right)$ if $\sigma_j$ does not occur in $\sigma$;

$f(\sigma,j) = \left( \alpha \phi \omega ,b_j \right)$ if $\alpha$ is the shortest possible string for which $\sigma = \alpha \theta_j \omega$;

$f(\sigma,N) = (\sigma,N)$
"""

#  Backlinks
    - [[index|Zettelkasten]]
    - [[the_euclidean_algorithm___11_06_2022__090230167|Steps]]
