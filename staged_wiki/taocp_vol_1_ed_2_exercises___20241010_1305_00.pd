# taocp_vol_1_ed_2_exercises

<!-- visits: 40 -->

see [[taocp_note_on_exercises___20241010_125406|taocp_note_on_exercises]]

#  exercises at the end of "Notes on the exercises"

# Notes On Exercises Section
2. Without exercises learning is stunted.
Doing questions helps test knowledge and check if there are any gaps in understanding.
Math is not a spectator sport.

3. $13^{3} : =13 \times 13 \times 13 := (13 \times 13) \times 13$
By definition, multiplication is related to addition in the following way.
$x \times n := \sum _{i=1}^{n} x$.
so $13 \times 13 = \sum _{i=1}^{13} 13 = 169$.
We do the same step.
$169 \times 13 = \sum _{i=1}^{13} 169 = 2197$

4. Fermat's last theorem, unsolvable by me with current ability, TODO look at proof

#  1.1 exercises
n. swap $a$ and $b$, $a$ and $c$, $a$ and $d$ ($3 \times 3$ steps of replacement) TODO see if we can cut the $9$ replacements down even further by exploiting unnecessary temp variable calls

$t \leftarrow a$ $b \leftarrow a$ $a \leftarrow t$
$t \leftarrow b$ $c \leftarrow b$ $b \leftarrow t$
$t \leftarrow c$ $d \leftarrow c$ $c \leftarrow t$

#  1.1 q2
In step `3`, we know that $m \leftarrow n$ and $n \leftarrow r$, so it is sufficient to prove that $r < n$.
we have $m = an + r$ where $a$ is the largest number that satisfies the equation.
For sake of contradiction, suppose that $r \ge n$, this implies $r = n + b$ where $b \ge 0$
$\implies m = an + n + b$
$\implies m = (a+1)n + b$ which is a contradiction, we assumed that $a$ is the largest number that satisies the equation of that form.

#  1.1 q3
The [[the_euclidean_algorithm___11_06_2022__090230167|Steps]] is as follows.

3. [Interchange] Set $m \leftarrow \left\lfloor \frac{m}{n} \right\rfloor, n \leftarrow m \% n$ 
2. [Is it zero?] If $n = 0$, the algorithm terminates; $m$ is the [[gcd___11_06_2022__09023058|gcd___11_06_2022__09023058]] and go back to step `1.`

#  1.1 q4.
6099/2166 = 2 r 1767 (6099 - 4332) 
.. 1767, 399
.. 399, 171
.. 171, 57
.. 57

#  1.1 q5
1. No finiteness, no terminating condition
2. Definiteness "Is section interesting?" "are you mathematically inclined?" (possibly)
3. No output

#  1.1 q6
The average number of times the step `E1` will be computed with $n \leftarrow 5$.

#  1.1. q7
The number of times an algorithm executes `E1` is well defined as we know that `E1` is deterministic and finite.
We then divide by $n$ and take a limit for the set of $\mathbb{R}$.
$\lim_{n \to \infty} \frac{\text{ The number of times E1 is executed }}{n}$
This in unambiguous, in other words well defined.

With step `E0`, $U_m$ and $T_n$ are the same.

Without it there would be a step involving the switch of the two.
$U_m = T_n + 1$ where $m < n$
$U_m = T_n$ otherwise.

#  1.1 q8
Will work on this tomorrow (10 Dec 2024)
We are given.

$f((m,n)) = (m,n,0,1);	f((n)) = (n);$

$f((m,n,r,1)) = (m,\min(m,n),\left| m - n \right| , 2);$

$f((m,n,r,2)) = (n) \text{ if } r = 0, (m,n,r,3) \text{ otherwise };$

$f((m,n,p,3)) = (n,p,p,1)$

# 1.1 q9


#  Backlinks
    - [[index|Zettelkasten]]
    - [[taocp_vol_1_ed_2___20241010_125139|taocp_vol_1_ed_2]]
